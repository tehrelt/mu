syntax = "proto3";

package auth;

option go_package="github.com/tehrelt/moi-uslugi/proto/auth;authpb";

service AuthService {
    rpc Authorize(AuthorizeRequest) returns (AuthorizeResponse);
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Logout(LogoutRequest) returns (LogoutResponse);
    rpc Profile(ProfileRequest) returns (ProfileResponse);
    rpc Refresh(RefreshRequest) returns (RefreshResponse);
    rpc AddRole(AddRoleRequest) returns (AddRoleResponse);
    rpc HasAdmin(HasAdminRequest) returns (HasAdminResponse);
}

enum Role {
    ROLE_UNKNOWN = 0;
    ROLE_REGULAR = 1;
    ROLE_ADMIN = 2;
}


message RegisterRequest {
    string user_id = 1;
    string password = 2;
    repeated Role roles = 3;
}

message RegisterResponse {
    Tokens tokens = 1;
}

message HasAdminRequest {
}

message HasAdminResponse {
    bool has_admin = 1;
}

message AddRoleRequest {
    string user_id = 1;
    Role role = 2;
}

message AddRoleResponse {
}

message AuthorizeRequest {
    string token = 1;
    repeated Role roles = 2;
}

message AuthorizeResponse {
}

message User {
    string last_name = 1;
    string first_name = 2;
    string middle_name = 3;
    string email = 4;
    string phone = 5;
    int32 passport_number = 6;
    int32 passport_series = 7;
    string snils = 8;
    string password = 9;
}


message LoginRequest {
    oneof login {
        string email = 1;
        string phone = 2;
        string snils = 3;
    }
    string password = 4;
}

message Tokens {
    string access_token = 1;
    string refresh_token = 2;
}

message LoginResponse {
    Tokens tokens = 1;
}

message ProfileRequest {
    string access_token = 1;
}

message ProfileResponse {
    string id = 1;
    string last_name = 2;
    string first_name = 3;
    string middle_name = 4;
    string email = 5;
    repeated Role roles = 6;
}

message LogoutRequest {
    string access_token = 1;
}
message LogoutResponse {}

message RefreshRequest {
    string refresh_token = 1;
}

message RefreshResponse {
    Tokens tokens = 1;
}
