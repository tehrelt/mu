// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"context"
	"errors"
	"github.com/tehrelt/mu-lib/tracer"
	"github.com/tehrelt/mu/telegram-bot/internal/config"
	"github.com/tehrelt/mu/telegram-bot/internal/transport/tg"
	"go.opentelemetry.io/otel/trace"
	"gopkg.in/telebot.v4"
)

// Injectors from wire.go:

func NewApp(ctx context.Context) (*App, func(), error) {
	configConfig := config.New()
	bot, err := _bot(ctx, configConfig)
	if err != nil {
		return nil, nil, err
	}
	tgBot := tg.New(configConfig, bot)
	tracer, err := _tracer(ctx, configConfig)
	if err != nil {
		return nil, nil, err
	}
	app := newApp(configConfig, tgBot, tracer)
	return app, func() {
	}, nil
}

// wire.go:

func _tracer(ctx context.Context, cfg *config.Config) (trace.Tracer, error) {
	return tracer.SetupTracer(ctx, cfg.Jaeger.Endpoint, cfg.App.Name)
}

func _bot(ctx context.Context, cfg *config.Config) (*telebot.Bot, error) {

	token := cfg.BotToken

	if token == "" {
		return nil, errors.New("bot token is empty")
	}

	bot, err := telebot.NewBot(telebot.Settings{
		Token: token,
	})
	if err != nil {
		return nil, err
	}

	return bot, nil
}
